@page
@model api_flms_service.Pages.Categories.ManageModel
@{
    ViewData["Title"] = "Manage Category";
    Layout = "~/Pages/Shared/_Layout.cshtml"; // Path to your layout file
}

<div class="container">
    <h4 class="text-center" id="pageTitle">Add or Edit a Category</h4>
    <br>
    <form id="manageCategoryForm">
        <div class="form-group">
            <label for="categoryName">Category Name:</label>
            <input type="text" id="categoryName" class="form-control" required>
        </div>
        <button type="submit" class="btn btn-primary" id="submitButton">Add Category</button>
    </form>
    <div id="message" class="mt-3"></div>
</div>

<script>
    const urlParams = new URLSearchParams(window.location.search);
    const categoryId = urlParams.get('id'); // Lấy categoryId từ query string

    // Fetch category nếu đang Edit
    async function fetchCategory() {
        if (categoryId && !isNaN(categoryId) && categoryId.trim() !== "") {
            document.getElementById('pageTitle').innerText = "Edit Category";
            document.getElementById('submitButton').innerText = "Update Category";

            try {
                const response = await fetch(`/api/v0/category/${categoryId}`);
                if (response.ok) {
                    const category = await response.json();
                    document.getElementById('categoryName').value = category.categoryName; // Đúng tên thuộc tính
                } else {
                    document.getElementById('message').innerHTML = `<div class="alert alert-danger">Category not found.</div>`;
                }
            } catch (err) {
                document.getElementById('message').innerHTML = `<div class="alert alert-danger">An error occurred while fetching the category: ${err.message}</div>`;
            }
        } else {
            // Nếu không có categoryId hợp lệ -> Add mode
            document.getElementById('pageTitle').innerText = "Add Category";
            document.getElementById('submitButton').innerText = "Add Category";
        }
    }

    // Gọi fetchCategory khi trang load
    fetchCategory();

    // Xử lý form submit
    document.getElementById('manageCategoryForm').addEventListener('submit', async function (e) {
        e.preventDefault();
        const categoryName = document.getElementById('categoryName').value;

        try {
            const method = categoryId && !isNaN(categoryId) ? 'PUT' : 'POST';
            const url = categoryId && !isNaN(categoryId) ? `/api/v0/category/${categoryId}` : `/api/v0/category`;
            const body = categoryId && !isNaN(categoryId)
                ? JSON.stringify({ categoryId: parseInt(categoryId), categoryName: categoryName }) // Đổi catId -> categoryId, catName -> categoryName
                : JSON.stringify({ categoryName: categoryName });

            const response = await fetch(url, {
                method: method,
                headers: { 'Content-Type': 'application/json' },
                body: body
            });

            if (response.ok) {
                const successMessage = categoryId && !isNaN(categoryId)
                    ? "Category updated successfully!"
                    : "Category added successfully!";
                document.getElementById('message').innerHTML = `<div class="alert alert-success">${successMessage}</div>`;
                document.getElementById('manageCategoryForm').reset();
                setTimeout(() => {
                    window.location.href = "/Categories"; // Redirect về danh sách Categories
                }, 1000);
            } else {
                const error = await response.json();
                document.getElementById('message').innerHTML = `<div class="alert alert-danger">${error.message || "An error occurred while saving the category."}</div>`;
            }
        } catch (err) {
            document.getElementById('message').innerHTML = `<div class="alert alert-danger">An error occurred while saving the category: ${err.message}</div>`;
        }
    });

</script>