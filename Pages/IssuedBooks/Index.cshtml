@page
@model api_flms_service.Pages.IssuedBooks.IndexModel
@{
    ViewData["Title"] = "Issued Books";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="container">
    <h4 class="text-center">Issued Books</h4>
    <div class="text-right mb-3">
        <a href="/IssuedBooks/Manage" class="btn btn-success">Issue New Book</a>
    </div>
    <table class="table table-bordered table-hover text-center" id="issuedBooksTable">
        <thead>
            <tr>
                <th>Book No</th>
                <th>Book Name</th>
                <th>Author</th>
                <th>Student ID</th>
                <th>Status</th>
                <th>Issue Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <!-- Issued books will be dynamically loaded here -->
        </tbody>
    </table>
</div>

<script>
    async function fetchIssuedBooks() {
        try {
            const response = await fetch('/api/v0/issued-books');
            const issuedBooks = await response.json();
            const tableBody = document.querySelector('#issuedBooksTable tbody');
            tableBody.innerHTML = '';

            issuedBooks.forEach(book => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${book.bookNo}</td>
                    <td>${book.bookName}</td>
                    <td>${book.bookAuthor}</td>
                    <td>${book.studentId}</td>
                    <td>${book.status === 1 ? "Issued" : "Returned"}</td>
                    <td>${new Date(book.issueDate).toLocaleDateString()}</td>
                    <td>
                        <a href="/IssuedBooks/Manage?id=${book.sNo}" class="btn btn-primary">Edit</a>
                        <button class="btn btn-danger" onclick="deleteIssuedBook(${book.sNo})">Delete</button>
                    </td>
                `;
                tableBody.appendChild(row);
            });
        } catch (err) {
            console.error("Failed to fetch issued books:", err);
        }
    }

    async function deleteIssuedBook(id) {
        if (confirm("Are you sure you want to delete this issued book?")) {
            try {
                const response = await fetch(`/api/v0/issued-books/${id}`, { method: 'DELETE' });
                if (response.ok) {
                    fetchIssuedBooks();
                } else {
                    console.error("Failed to delete issued book:", await response.json());
                }
            } catch (err) {
                console.error("Error during issued book deletion:", err);
            }
        }
    }

    // Fetch issued books on page load
    fetchIssuedBooks();
</script>
