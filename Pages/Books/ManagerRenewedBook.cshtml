@page
@model api_flms_service.Pages.Books.ManagerRenewedBookModel
@{
    ViewData["Title"] = "Manage Renewed Book";
    Layout = "_Layout";
}

<style>
    /* Tiêu đề */
    .page-title {
        color: #2c3e50;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
        animation: fadeInDown 1s ease-in-out;
        background: linear-gradient(90deg, #ff6b6b 0%, #4ecdc4 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    /* Bảng */
    .borrowed-table {
        background: #ffffff;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        animation: fadeInUp 1s ease-in-out;
    }

        .borrowed-table thead {
            background: linear-gradient(90deg, #ff6b6b 0%, #4ecdc4 100%);
            color: white;
        }

        .borrowed-table th, .borrowed-table td {
            vertical-align: middle;
            text-align: center;
            padding: 15px;
        }

        .borrowed-table th {
            font-weight: bold;
        }

        .borrowed-table td img {
            max-width: 50px;
            height: auto;
            border-radius: 5px;
            object-fit: cover;
        }

    /* Nút Renew */
    .btn-renew {
        background: linear-gradient(90deg, #ff6b6b 0%, #4ecdc4 100%);
        border: none;
        border-radius: 20px;
        padding: 8px 20px;
        font-weight: bold;
        color: white;
        transition: transform 0.3s ease, background 0.3s ease;
    }

        .btn-renew:hover {
            transform: scale(1.05);
            background: linear-gradient(90deg, #e65b5b 0%, #45b7b0 100%);
        }

    /* Animation */
    @@keyframes fadeInDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

<div class="container mt-3">
    <!-- Tiêu đề -->
    <h2 class="page-title text-center mb-5">Your Borrowed Books</h2>

    <!-- Bảng -->
    <table id="borrowedBooksTable" class="table borrowed-table">
        <thead>
            <tr>
                <th style="width: 30%;">Book Name</th>
                <th style="width: 20%;">Due Date</th>
                <th style="width: 20%;">Image</th>
                <th style="width: 30%;">Action</th>
            </tr>
        </thead>
        <tbody>
            <!-- Data will be populated here by JavaScript -->
        </tbody>
    </table>
</div>

<!-- Thêm phần jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(async function () {
        try {
            const response = await fetch('/api/v0/books/borrowed', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            const data = await response.json();
            const tableBody = $('#borrowedBooksTable tbody');

            if (data.length > 0) {
                data.forEach(book => {
                    const row = `
                        <tr>
                            <td>${book.title}</td>
                            <td>${new Date(book.borrowedUntil).toLocaleDateString()}</td>
                            <td>
                                ${book.imageUrls ? `<img src="${book.imageUrls.split(',')[0]}" alt="Book Image" />` : 'No image'}
                            </td>
                            <td>
                                <button class="btn btn-renew btn-sm" onclick="renewBook(${book.bookId})"><i class="fas fa-sync-alt me-2"></i>Renew</button>
                            </td>
                        </tr>
                    `;
                    tableBody.append(row);
                });
            } else {
                const row = `<tr><td colspan="4" class="text-center text-muted"><i class="fas fa-book me-2"></i>No borrowed books found.</td></tr>`;
                tableBody.append(row);
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Failed to load borrowed books. Please try again later.');
        }
    });

    async function renewBook(bookId) {
        try {
            const response = await fetch('/api/v0/books/renew', {
                method: 'POST',
                body: JSON.stringify({ BookId: bookId }),
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            if (!response.ok) {
                throw new Error('Failed to renew book');
            }

            const data = await response.json();
            alert('Book renewed successfully. New due date: ' + new Date(data.newDueDate).toLocaleDateString());
            location.reload(); // Reload the page to update the list
        } catch (error) {
            console.error('Error renewing book:', error);
            alert('Error renewing book: ' + error.message);
        }
    }
</script>

@section Scripts {
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
}