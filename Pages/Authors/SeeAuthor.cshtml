@page
@model api_flms_service.Pages.Authors.SeeAuthorModel

@{
    ViewData["Title"] = "Author Details";
}

<style>
    /* Kế thừa màu chủ đạo và style từ Index.cshtml */
    body {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        font-family: 'Poppins', sans-serif;
        margin: 0;
        padding: 0;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 40px 20px;
    }

    /* Author Section */
    .author-section {
        background: #fff;
        border-radius: 20px;
        padding: 40px;
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
        margin-bottom: 40px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        position: relative;
        overflow: hidden;
    }

        .author-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: linear-gradient(90deg, #ff6b6b 0%, #4ecdc4 100%);
        }

    .author-card {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
    }

        .author-card img {
            border: 5px solid #ff6b6b;
            border-radius: 50%;
            width: 220px;
            height: 220px;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .author-card:hover img {
            transform: scale(1.05);
        }

    .author-name {
        color: #2c3e50;
        font-size: 2.5rem;
        font-weight: 700;
        margin: 20px 0 10px;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
        animation: fadeInDown 1s ease-in-out;
    }

    .author-country {
        color: #6c757d;
        font-size: 1.2rem;
        margin-bottom: 20px;
        font-style: italic;
    }

    .description-container {
        position: relative;
        margin-bottom: 20px;
        max-width: 800px;
    }

    .description-text {
        max-height: 80px;
        overflow: hidden;
        transition: max-height 0.3s ease;
        margin-bottom: 0;
        color: #333;
        font-size: 1.1rem;
        line-height: 1.6;
    }

        .description-text.expanded {
            max-height: 1000px;
        }

    .read-more {
        color: #ff6b6b;
        cursor: pointer;
        display: block;
        text-align: center;
        font-weight: bold;
        font-size: 1rem;
        transition: color 0.3s ease;
        margin-top: 10px;
    }

        .read-more:hover {
            color: #e65b5b;
            text-decoration: underline;
        }

    /* Books Section */
    .books-section {
        background: #fff;
        border-radius: 20px;
        padding: 40px;
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
        border: 1px solid rgba(255, 255, 255, 0.2);
        position: relative;
        overflow: hidden;
        overflow-x: auto;
    }

        .books-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: linear-gradient(90deg, #ff6b6b 0%, #4ecdc4 100%);
        }

    .section-title {
        color: #2c3e50;
        font-size: 2rem;
        font-weight: 700;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
        animation: fadeInDown 1s ease-in-out;
        margin-bottom: 30px;
    }

    .book-card {
        background: #fff;
        border-radius: 15px;
        padding: 20px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .book-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
        }

        .book-card img {
            border-radius: 15px;
            width: 150px;
            height: 200px;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .book-card:hover img {
            transform: scale(1.05);
        }

    .btn-primary {
        background: linear-gradient(90deg, #ff6b6b 0%, #4ecdc4 100%);
        border: none;
        border-radius: 10px;
        padding: 10px 20px;
        font-weight: bold;
        color: white;
        transition: transform 0.3s ease, background 0.3s ease;
    }

        .btn-primary:hover {
            transform: scale(1.05);
            background: linear-gradient(90deg, #e65b5b 0%, #45b7b0 100%);
        }

    /* Animations */
    @@keyframes fadeInDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .fade-in-up {
        animation: fadeInUp 1s ease-in-out;
    }
</style>

<body>
    <div class="container">
        @if (Model.Author != null)
        {
            <div class="author-section fade-in-up">
                <div class="author-card">
                    @if (!string.IsNullOrEmpty(Model.Author.CloudinaryId))
                    {
                        <img src="https://res.cloudinary.com/dtlmurwxe/image/upload/@Model.Author.CloudinaryId" alt="@Model.Author.Name">
                    }
                    else
                    {
                        <img src="https://via.placeholder.com/220" alt="No Image">
                    }
                    <h1 class="author-name">@Model.Author.Name</h1>
                    <p class="author-country">Country: @Model.Author.CountryOfOrigin.Replace('_', ' ')</p>
                    <div class="description-container">
                        <p class="description-text">@Model.Author.Biography</p>
                        <a href="#" class="read-more" data-target="description-text">Xem thêm</a>
                    </div>
                </div>
            </div>

            <div class="books-section fade-in-up">
                <h2 class="section-title text-center">Books by @Model.Author.Name</h2>
                @if (Model.Author.Books.Any())
                {
                    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4 justify-content-center">
                        @foreach (var book in Model.Author.Books)
                        {
                            <div class="col d-flex justify-content-center">
                                <div class="book-card text-center">
                                    <a href="/Books/ShowBook?id=@book.BookId" style="text-decoration: none;">
                                        <img src="@book.CloudinaryImageId" class="card-img-top" alt="@book.Title">
                                        <div class="card-body">
                                            <h5 class="card-title fw-bold" style="color: #2c3e50;">@book.Title</h5>
                                            <p class="text-muted">Author: @Model.Author.Name</p>
                                        </div>
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="alert alert-info text-center w-50 mx-auto">
                        <h4 class="fw-bold">No Books Found</h4>
                        <p>This author has no books in our library yet.</p>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="alert alert-warning text-center w-50 mx-auto fade-in-up">
                <h4 class="fw-bold">Author Not Found</h4>
                <p>The requested author could not be found.</p>
                <a href="/Authors/SeeAuthors" class="btn btn-primary mt-2">Back to Authors</a>
            </div>
        }
    </div>

    @section Scripts {
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                // Handle "Read More" for Biography
                const readMoreLinks = document.querySelectorAll('.read-more');
                readMoreLinks.forEach(link => {
                    link.addEventListener('click', function (e) {
                        e.preventDefault();
                        const targetId = this.getAttribute('data-target');
                        const description = this.parentElement.querySelector('.' + targetId);
                        if (description) {
                            description.classList.toggle('expanded');
                            this.textContent = description.classList.contains('expanded') ? 'Thu gọn' : 'Xem thêm';
                        }
                    });
                });
            });
        </script>
    }
</body>