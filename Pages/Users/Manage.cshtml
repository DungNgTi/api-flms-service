@page
@model api_flms_service.Pages.Users.ManageModel
@{
    ViewData["Title"] = "Manage User";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="container">
    <h4 class="text-center" id="pageTitle">Add or Edit a User</h4>
    <br>
    <form id="manageUserForm">
        <div class="form-group">
            <label for="name">Name:</label>
            <input type="text" id="name" class="form-control" required>
        </div>
        <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" class="form-control" required>
        </div>
        <div class="form-group">
            <label for="password">Password:</label>
            <input type="password" id="password" class="form-control" required>
        </div>
        <div class="form-group">
            <label for="mobile">Mobile:</label>
            <input type="text" id="mobile" class="form-control" required>
        </div>
        <div class="form-group">
            <label for="address">Address:</label>
            <input type="text" id="address" class="form-control" required>
        </div>
        <button type="submit" class="btn btn-primary" id="submitButton">Add User</button>
    </form>
    <div id="message" class="mt-3"></div>
</div>

<script>
    const urlParams = new URLSearchParams(window.location.search);
    const userId = urlParams.get('id');

    async function fetchUser() {
        if (userId) {
            document.getElementById('pageTitle').innerText = "Edit User";
            document.getElementById('submitButton').innerText = "Update User";

            try {
                const response = await fetch(`/api/v0/users/${userId}`);
                if (response.ok) {
                    const user = await response.json();
                    document.getElementById('name').value = user.name;
                    document.getElementById('email').value = user.email;
                    document.getElementById('password').value = user.password;
                    document.getElementById('mobile').value = user.mobile;
                    document.getElementById('address').value = user.address;
                } else {
                    document.getElementById('message').innerHTML = `<div class="alert alert-danger">User not found.</div>`;
                }
            } catch (err) {
                document.getElementById('message').innerHTML = `<div class="alert alert-danger">Error loading user data.</div>`;
            }
        }
    }

    document.getElementById('manageUserForm').addEventListener('submit', async function (e) {
        e.preventDefault();
        const userData = {
            name: document.getElementById('name').value,
            email: document.getElementById('email').value,
            password: document.getElementById('password').value,
            mobile: document.getElementById('mobile').value,
            address: document.getElementById('address').value,
        };

        if (userId) {
            userData.id = parseInt(userId);
        }

        try {
            const method = userId ? 'PUT' : 'POST';
            const url = '/api/v0/users';

            const response = await fetch(url, {
                method: method,
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(userData),
            });

            if (response.ok) {
                document.getElementById('message').innerHTML = `<div class="alert alert-success">${userId ? "User updated" : "User added"} successfully!</div>`;
                if (!userId) document.getElementById('manageUserForm').reset();
                window.location.href = "/Users";
            } else {
                const error = await response.json();
                document.getElementById('message').innerHTML = `<div class="alert alert-danger">${error.message}</div>`;
            }
        } catch (err) {
            document.getElementById('message').innerHTML = `<div class="alert alert-danger">Error saving user.</div>`;
        }
    });

    fetchUser();
</script>
